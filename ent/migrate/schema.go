// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "contents", Type: field.TypeString, Size: 8192},
		{Name: "sent_at", Type: field.TypeTime},
		{Name: "message_id", Type: field.TypeString, Unique: true},
		{Name: "channel_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "in_reply_to_id", Type: field.TypeInt, Nullable: true},
		{Name: "sender_id", Type: field.TypeInt},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_messages_responders",
				Columns:    []*schema.Column{MessagesColumns[7]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_users_messages",
				Columns:    []*schema.Column{MessagesColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "message_sent_at",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[2]},
			},
			{
				Name:    "message_sender_id",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[8]},
			},
			{
				Name:    "message_message_id",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[3]},
			},
			{
				Name:    "message_channel_id",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[4]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "date_joined", Type: field.TypeTime},
		{Name: "is_bot", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_user_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[1]},
			},
		},
	}
	// MessageMentionsColumns holds the columns for the "message_mentions" table.
	MessageMentionsColumns = []*schema.Column{
		{Name: "message_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// MessageMentionsTable holds the schema information for the "message_mentions" table.
	MessageMentionsTable = &schema.Table{
		Name:       "message_mentions",
		Columns:    MessageMentionsColumns,
		PrimaryKey: []*schema.Column{MessageMentionsColumns[0], MessageMentionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "message_mentions_message_id",
				Columns:    []*schema.Column{MessageMentionsColumns[0]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "message_mentions_user_id",
				Columns:    []*schema.Column{MessageMentionsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MessagesTable,
		UsersTable,
		MessageMentionsTable,
	}
)

func init() {
	MessagesTable.ForeignKeys[0].RefTable = MessagesTable
	MessagesTable.ForeignKeys[1].RefTable = UsersTable
	MessageMentionsTable.ForeignKeys[0].RefTable = MessagesTable
	MessageMentionsTable.ForeignKeys[1].RefTable = UsersTable
}
